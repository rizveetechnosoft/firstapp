name: First App

on: 
  push:
    branches:
      - 'feature/*'
  pull_request:
    branches:
      - 'feature/*'

jobs:
  lint:
    name: PHP Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Validate PHP Syntax
        run: |
          find . -type f -name '*.php' -print0 | xargs -0 -n1 php -l

  code_quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Install PHPStan
        run: composer require --dev phpstan/phpstan

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-scripts --no-progress

      - name: Update Composer dependencies
        run: composer update --prefer-dist --no-interaction --no-scripts --no-progress

      - name: Set up .env file
        run: cp .env.example .env

      - name: Generate Laravel application key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate --no-interaction --env=testing

      - name: Run tests
        run: php artisan test --env=testing
